user www-data;
worker_processes 1;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
}

http {

        ##
        # Basic Settings
        ##
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        gzip on;
        keepalive_timeout  65;
        disable_symlinks off;

        ##
        # SSL Settings
        ##
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Virtual Host Configs
        ##
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

        ##
        # Upload Settings
        ##
        client_max_body_size 10240M;

        ##
        # Timeout Settings
        ##
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        # Redirect http to https.
        server {
          listen 80;
          return 301 https://$host:$server_port$request_uri;
        }
        server {
          server_name {{ TORRENT_FQDN }};
          ssl on;
          listen 443 ssl; # managed by Certbot
          ssl_certificate /etc/letsencrypt/live/{{ DOMAIN }}/fullchain.pem; # managed by Certbot
          ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem; # managed by Certbot
          ssl_session_cache          shared:SSL:10m;
          ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
          ssl_prefer_server_ciphers  on;
          ssl_ciphers                'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

          proxy_set_header Host $http_host:$server_port;
          proxy_set_header X-Real-IP $remote_addr:$server_port;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Cookie "";


          #location / {
          #    try_files $uri $uri/ =404;
          #    allow 10.0.0.0/16;
          #    deny all;
          #}
          location ~ \.php$ {
              try_files $uri $uri/ =404;
              fastcgi_split_path_info ^(.+\.php)(/.+)$;
              fastcgi_pass unix:/var/run/php-fpm-www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
          }

          # redirect server error pages to the static page /50x.html
          error_page 400 https://$host:$server_port$request_uri;

          location /deluge/ {
                  proxy_pass http://{{ TORRENT_DELUGE_IP }}:{{ TORRENT_DELUGE_PORT }}/;
                  proxy_set_header  X-Deluge-Base "/deluge/";
          }

          location /jackett/ {
                  proxy_pass http://{{ TORRENT_JACKETT_IP }}:{{ TORRENT_JACKETT_PORT }}/jackett/;
                  proxy_http_version 1.1;
                  proxy_set_header   Upgrade $http_upgrade;
                  proxy_set_header   Connection keep-alive;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header   X-Forwarded-Proto $scheme;
                  proxy_set_header   X-Forwarded-Host $http_host;
          }
          location /radarr/ {
                  proxy_pass http://{{ TORRENT_RADARR_IP }}:{{ TORRENT_RADARR_PORT }}/radarr/;
          }
        }
        server {
            if ($host = {{ TORRENT_FQDN }}) {
                return 301 https://$host:$server_port$request_uri;
                }
        }
}
