---
- name: Copy .env file for firefly_iii_app
  template:
    src: templates/.env.j2
    dest: /tmp/.env

- name: Create Docker Network
  docker_network:
    name: firefly_iii_net

- name: Create firefly_iii_db container
  docker_container:
    name: firefly_iii_db
    image: "{{ DOCKER_IMAGE_POSTGRES }}"
    networks:
      - name: "{{ DOCKER_NETWORK_NAME }}"
    purge_networks: yes
    networks_cli_compatible: no
    volumes:
      - firefly_iii_db:/var/lib/postgresql/data
    env:
      POSTGRES_PASSWORD: "{{ DB_PASSWORD }}"
      POSTGRES_USER: "firefly"

- name: Create firefly_iii_app container
  docker_container:
    name: firefly_iii_app
    image: "{{ DOCKER_IMAGE_FIREFLY }}"
    published_ports: "{{ FF_APP_PORT }}:80"
    networks:
      - name: "{{ DOCKER_NETWORK_NAME }}"
    purge_networks: yes
    networks_cli_compatible: no
    volumes:
      - firefly_iii_export:/var/www/firefly-iii/storage/export
      - firefly_iii_upload:/var/www/firefly-iii/storage/upload
    env_file: /tmp/.env

- name: Create firefly_iii_nginx container
  docker_container:
    name: firefly_iii_nginx
    image: "{{ DOCKER_IMAGE_NGINX }}"
    published_ports: "{{ FF_NGINX_PORT }}:443"
    networks:
      - name: "{{ DOCKER_NETWORK_NAME }}"
    purge_networks: yes
    networks_cli_compatible: no
    volumes:
      - firefly_iii_nginx:/etc/nginx
      - /etc/letsencrypt:/etc/letsencrypt
    env:
      VIRTUAL_HOST: "{{ FQDN }}"

- name: Create sites-enabled Directory
  file:
    path: /var/lib/docker/volumes/firefly_iii_nginx/_data/sites-enabled
    state: directory

- name: Copy Nginx Config
  synchronize:
    src: templates/nginx.conf
    dest: /var/lib/docker/volumes/firefly_iii_nginx/_data/nginx.conf

- name: Copy Nginx VHOST Config
  template:
    src: templates/firefly.conf.j2
    dest: /var/lib/docker/volumes/firefly_iii_nginx/_data/sites-enabled/firefly.conf

- name: Restart Nginx Container
  docker_container:
    name: firefly_iii_nginx
    state: started
    restart: yes
...
